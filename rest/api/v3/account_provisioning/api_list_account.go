/*
* This code was generated by
*
* SENDGRID-OAI-GENERATOR
*
* Twilio SendGrid Account Provisioning API
* The Twilio SendGrid Account Provisioning API provides a platform for Twilio SendGrid resellers to manage their customer accounts. This API is for companies that have a formal reseller partnership with Twilio SendGrid.  You can access Twilio SendGrid sub-account functionality without becoming a reseller. If you require sub-account functionality, see the Twilio [SendGrid Subusers](https://docs.sendgrid.com/ui/account-and-settings/subusers) feature, which is available with [Pro and Premier plans](https://sendgrid.com/pricing/).
*
* NOTE: This class is auto generated by OpenAPI Generator.
* https://openapi-generator.tech
* Do not edit the class manually.
 */

package openapi

import (
	"encoding/json"
	"fmt"
	"net/url"
)

type ListAccountParam struct {
	// The last item successfully retrieved
	Offset *string `json:"offset,omitempty"`
	// The number of items to return
	Limit *int32 `json:"limit,omitempty"`
}

func (params *ListAccountParam) SetOffset(Offset string) *ListAccountParam {
	params.Offset = &Offset
	return params
}
func (params *ListAccountParam) SetLimit(Limit int32) *ListAccountParam {
	params.Limit = &Limit
	return params
}

// Retrieves all accounts under the organization.
func (c *ApiService) ListAccount(params *ListAccountParam) (interface{}, error) {
	path := "/v3/partners/accounts"

	data := url.Values{}
	headers := map[string]interface{}{
		"Content-Type": "application/x-www-form-urlencoded",
	}

	if params != nil && params.Offset != nil {
		data.Set("offset", *params.Offset)
	}
	if params != nil && params.Limit != nil {
		data.Set("limit", fmt.Sprint(*params.Limit))
	}

	resp, err := c.requestHandler.Get(c.baseURL+path, data, headers)
	if err != nil {
		return nil, err
	}

	defer resp.Body.Close()
	if resp.StatusCode == 200 {
		ps := &AccountList{}
		if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
			return nil, err
		}

		return ps, err
	}
	return nil, nil
}
