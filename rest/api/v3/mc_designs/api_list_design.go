/*
* This code was generated by
*
* SENDGRID-OAI-GENERATOR
*
* Twilio SendGrid Marketing Campaigns Designs
* The Twilio SendGrid Designs API offers the ability to manage assets stored in the Twilio SendGrid [Design Library](https://mc.sendgrid.com/design-library/my-designs).  The Design Library is a feature-rich email layout tool and media repository. You can [build designs for all your marketing email needs](https://sendgrid.com/docs/ui/sending-email/working-with-marketing-campaigns-email-designs/), including Single Sends and Automations.  You can also duplicate and then modify one of the pre-built designs provided by Twilio SendGrid to get you started.  The Designs API provides a REST-like interface for creating new designs, retrieving a list of existing designs, duplicating or updating a design, and deleting a design.
*
* NOTE: This class is auto generated by OpenAPI Generator.
* https://openapi-generator.tech
* Do not edit the class manually.
 */

package openapi

import (
	"encoding/json"
	"fmt"
	"net/url"
)

type ListDesignParam struct {
	// number of results to return
	PageSize *int32 `json:"page_size,omitempty"`
	// token corresponding to a specific page of results, as provided by metadata
	PageToken *string `json:"page_token,omitempty"`
	// set to false to return all fields
	Summary *bool `json:"summary,omitempty"`
}

func (params *ListDesignParam) SetPageSize(PageSize int32) *ListDesignParam {
	params.PageSize = &PageSize
	return params
}
func (params *ListDesignParam) SetPageToken(PageToken string) *ListDesignParam {
	params.PageToken = &PageToken
	return params
}
func (params *ListDesignParam) SetSummary(Summary bool) *ListDesignParam {
	params.Summary = &Summary
	return params
}

// **This endpoint allows you to retrieve a list of designs already stored in your Design Library**.  A GET request to `/designs` will return a list of your existing designs. This endpoint will not return the pre-built Twilio SendGrid designs. Pre-built designs can be retrieved using the `/designs/pre-builts` endpoint, which is detailed below.  By default, you will receive 100 results per request; however, you can modify the number of results returned by passing an integer to the `page_size` query parameter.
func (c *ApiService) ListDesign(params *ListDesignParam) (interface{}, error) {
	path := "/v3/designs"

	data := url.Values{}
	headers := map[string]interface{}{
		"Content-Type": "application/x-www-form-urlencoded",
	}

	if params != nil && params.PageSize != nil {
		data.Set("page_size", fmt.Sprint(*params.PageSize))
	}
	if params != nil && params.PageToken != nil {
		data.Set("page_token", *params.PageToken)
	}
	if params != nil && params.Summary != nil {
		data.Set("summary", fmt.Sprint(*params.Summary))
	}

	resp, err := c.requestHandler.Get(c.baseURL+path, data, headers)
	if err != nil {
		return nil, err
	}

	defer resp.Body.Close()
	if resp.StatusCode == 200 {
		ps := &ListDesign200Response{}
		if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
			return nil, err
		}

		return ps, err
	}
	return nil, nil
}
