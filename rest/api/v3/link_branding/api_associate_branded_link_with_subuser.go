/*
* This code was generated by
*
* SENDGRID-OAI-GENERATOR
*
* Twilio SendGrid Link Branding API
* The Twilio SendGrid Link Branding API allows you to configure your domain settings so that all of the click-tracked links, opens, and images in your emails are served from your domain rather than `sendgrid.net`. Spam filters and recipient servers look at the links within emails to determine whether the email appear trustworthy. They use the reputation of the root domain to determine whether the links can be trusted.  You can also manage Link Branding in the **Sender Authentication** section of the Twilio SendGrid application user interface.   See [**How to Set Up Link Branding**](https: //sendgrid.com/docs/ui/account-and-settings/how-to-set-up-link-branding/) for more information.
*
* NOTE: This class is auto generated by OpenAPI Generator.
* https://openapi-generator.tech
* Do not edit the class manually.
 */

package openapi

import (
	"encoding/json"
	"fmt"
	"net/url"

	"strings"
)

type AssociateBrandedLinkWithSubuserParam struct {
	// The ID of the branded link you want to associate.
	LinkId *int32 `json:"link_id"`
	//
	AssociateBrandedLinkWithSubuserRequest *AssociateBrandedLinkWithSubuserRequest `json:"AssociateBrandedLinkWithSubuserRequest,omitempty"`
}

func (params *AssociateBrandedLinkWithSubuserParam) SetLinkId(LinkId int32) *AssociateBrandedLinkWithSubuserParam {
	params.LinkId = &LinkId
	return params
}
func (params *AssociateBrandedLinkWithSubuserParam) SetAssociateBrandedLinkWithSubuserRequest(AssociateBrandedLinkWithSubuserRequest AssociateBrandedLinkWithSubuserRequest) *AssociateBrandedLinkWithSubuserParam {
	params.AssociateBrandedLinkWithSubuserRequest = &AssociateBrandedLinkWithSubuserRequest
	return params
}

// **This endpoint allows you to associate a branded link with a subuser account.**  Link branding can be associated with subusers from the parent account. This functionality allows subusers to send mail using their parent's link branding. To associate link branding, the parent account must first create a branded link and validate it. The parent may then associate that branded link with a subuser via the API or the [Subuser Management page of the Twilio SendGrid App](https://app.sendgrid.com/settings/subusers).
func (c *ApiService) AssociateBrandedLinkWithSubuser(params *AssociateBrandedLinkWithSubuserParam) (interface{}, error) {
	path := "/v3/whitelabel/links/{LinkId}/subuser"
	if params != nil && params.LinkId != nil {
		path = strings.Replace(path, "{"+"LinkId"+"}", fmt.Sprint(*params.LinkId), -1)
	}

	data := url.Values{}
	headers := map[string]interface{}{
		"Content-Type": "application/json",
	}

	body := []byte{}
	if params != nil && params.AssociateBrandedLinkWithSubuserRequest != nil {
		b, err := json.Marshal(*params.AssociateBrandedLinkWithSubuserRequest)
		if err != nil {
			return nil, err
		}
		body = b
	}

	resp, err := c.requestHandler.Post(c.baseURL+path, data, headers, body...)
	if err != nil {
		return nil, err
	}

	defer resp.Body.Close()
	if resp.StatusCode == 200 {
		ps := &LinkBranding200{}
		if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
			return nil, err
		}

		return ps, err
	}
	return nil, nil
}
