/*
* This code was generated by
*
* SENDGRID-OAI-GENERATOR
*
* Twilio SendGrid Marketing Campaigns Custom Fields API
* The Twilio SendGrid Marketing Campaigns Custom Fields API allows you to add extra information about your marketing contacts that is relevant to your needs. For example, a fashion retailer might create a custom field for customers' shoe sizes, an ice cream shop might store customers' favorite flavors in a custom field, and you can create custom fields that make sense for your business.  With custom fields, you can also create [segments](https://docs.sendgrid.com/api-reference/segmenting-contacts-v2/) based on custom fields values. Your custom fields are completely customizable to the use-cases and user information that you need.  You can also manage your Custom Fields using the SendGrid application user interface. See [**Using Custom Fields**](https://docs.sendgrid.com/ui/managing-contacts/custom-fields) for more information, including a list of Reserved Fields. You can also manage your custom fields in the [Marketing Campaigns application user interface](https://mc.sendgrid.com/custom-fields).
*
* NOTE: This class is auto generated by OpenAPI Generator.
* https://openapi-generator.tech
* Do not edit the class manually.
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"net/url"

	"strings"
)

type UpdateFieldDefinitionParam struct {
	//
	CustomFieldId *string `json:"custom_field_id"`
	//
	UpdateFieldDefinitionRequest *UpdateFieldDefinitionRequest `json:"UpdateFieldDefinitionRequest,omitempty"`
}

func (params *UpdateFieldDefinitionParam) SetCustomFieldId(CustomFieldId string) *UpdateFieldDefinitionParam {
	params.CustomFieldId = &CustomFieldId
	return params
}
func (params *UpdateFieldDefinitionParam) SetUpdateFieldDefinitionRequest(UpdateFieldDefinitionRequest UpdateFieldDefinitionRequest) *UpdateFieldDefinitionParam {
	params.UpdateFieldDefinitionRequest = &UpdateFieldDefinitionRequest
	return params
}

// **This endpoint allows you to update a defined Custom Field.**  Only your Custom fields can be modified; Reserved Fields cannot be updated.
func (c *ApiService) UpdateFieldDefinition(params *UpdateFieldDefinitionParam) (interface{}, error) {
	path := "/v3/marketing/field_definitions/{CustomFieldId}"
	if params != nil && params.CustomFieldId != nil {
		path = strings.Replace(path, "{"+"CustomFieldId"+"}", *params.CustomFieldId, -1)
	}

	data := url.Values{}
	headers := map[string]interface{}{
		"Content-Type": "application/json",
	}

	body := []byte{}
	if params != nil && params.UpdateFieldDefinitionRequest != nil {
		b, err := json.Marshal(*params.UpdateFieldDefinitionRequest)
		if err != nil {
			return nil, err
		}
		body = b
	}

	resp, err := c.requestHandler.Patch(c.baseURL+path, data, headers, body...)
	if err != nil {
		return nil, err
	}

	defer resp.Body.Close()
	if resp.StatusCode == 200 {
		ps := &CreateFieldDefinition200Response{}
		if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
			return nil, err
		}

		return ps, err
	}
	if resp.StatusCode == 400 {
		ps := &CreateFieldDefinition400Response{}
		if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
			return nil, err
		}

		return ps, err
	}
	if resp.StatusCode == 404 {
		ps := &CreateFieldDefinition400Response{}
		if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
			return nil, err
		}

		return ps, err
	}
	return http.Response{StatusCode: resp.StatusCode, Body: resp.Body, Header: resp.Header}, nil
}
