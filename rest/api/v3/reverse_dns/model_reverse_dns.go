/*
* This code was generated by
*
* SENDGRID-OAI-GENERATOR
*
* Twilio SendGrid Reverse DNS API
* The Twilio SendGrid Reverse DNS API (formerly IP Whitelabel) allows you to configure reverse DNS settings for your account. Mailbox providers verify the sender of your emails by performing a reverse DNS lookup.  When setting up Reverse DNS, Twilio SendGrid will provide an A Record (address record) for you to add to the DNS records of your sending domain. The A record maps your sending domain to a dedicated Twilio SendGrid IP address. Once Twilio SendGrid has verified that the appropriate A record for the IP address has been created, the appropriate reverse DNS record for the IP address is generated.  Reverse DNS is available for [dedicated IP addresses](https://sendgrid.com/docs/ui/account-and-settings/dedicated-ip-addresses/) only.  You can also manage your reverse DNS settings in the Sender Authentication setion of the [Twilio SendGrid application user interface](https://app.sendgrid.com/settings/sender_auth).  See [**How to Set Up Reverse DNS**](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-reverse-dns/) for more information.
*
* NOTE: This class is auto generated by OpenAPI Generator.
* https://openapi-generator.tech
* Do not edit the class manually.
 */

package openapi

// ReverseDns struct for ReverseDns
type ReverseDns struct {
	// The ID of the Reverse DNS.
	Id int32 `json:"id"`
	// The IP address that this Reverse DNS was created for.
	Ip string `json:"ip"`
	// The reverse DNS record for the IP address. This points to the Reverse DNS subdomain.
	Rdns string `json:"rdns"`
	// The users who are able to send mail from the IP address.
	Users []ReverseDnsUsersInner `json:"users"`
	// The subdomain created for this reverse DNS. This is where the rDNS record points.
	Subdomain *string `json:"subdomain,omitempty"`
	// The root, or sending, domain.
	Domain string `json:"domain"`
	// Indicates if this is a valid Reverse DNS.
	Valid bool `json:"valid"`
	// Indicates if this Reverse DNS was created using the legacy whitelabel tool. If it is a legacy whitelabel, it will still function, but you'll need to create a new Reverse DNS if you need to update it.
	Legacy bool `json:"legacy"`
	// A Unix epoch timestamp representing the last time of a validation attempt.
	LastValidationAttemptAt *int32            `json:"last_validation_attempt_at,omitempty"`
	ARecord                 ReverseDnsARecord `json:"a_record"`
}
